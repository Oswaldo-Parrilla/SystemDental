/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
//Importanto librerias

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
//imortar la classe conexion y la DB
import java.sql.*;
import clases.Conexion;
import javax.swing.JOptionPane;

/**
 *
 * @author xSpectra
 */
public class Login extends javax.swing.JFrame {

    //Crear dos variables
    public static String user = "";
    String pass = "";

    /**
     **************************CREANDO EL LOGIN (LA PRIMER VENTANA) (CONSTRUCTOR)**********************
     */
    public Login() {
        initComponents();
        setSize(400, 550);//Reafirmar las medidas de nuestra interfaz 
        setResizable(false);// Nos permite evitar que el usuario edite las dimenciones de la ventana (interfaz)
        setTitle("Acceso al sistema");//El titulo en la parte superior de Jframe
        setLocationRelativeTo(null);//Que se centre la ventana cuando se ejecute el programa

        //**********************************Agregar imagen de fondo del login y se crea un objeto de la clase ImageIcon*****************************
        ImageIcon wallpaper = new ImageIcon("src/images/fondoGris.jpg");//Aqui le ponemos la ruta de las imagenes (el packete)
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(), jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));//Esta linea nos permite que la imagen se adapte a las dimenciones del Label
        jLabel_Wallpaper.setIcon(icono);//Aqui ya le pasamos la imagen al Label (configurada con las anteriores lineas de codigo) respecto a sus dimenciones
        this.repaint();//Esta linea de codigo es para asegurar que la imagen se refleje en el Jlabel, asegurar que se este aplicando.

        //*********************************Esta parte es para establecer el logo de nuestro login del data system(o cualquier otro logo que se desea).***************
        ImageIcon wallpaper_logo = new ImageIcon("src/images/dental.png");//Aqui se crea un objeto de la clase ImageIcon donde solicitaremos el logo del data system
        Icon icono_logo = new ImageIcon(wallpaper_logo.getImage().getScaledInstance(jLabel_Logo.getWidth(), jLabel_Logo.getHeight(), Image.SCALE_DEFAULT));//Se obtiene las dimenciones del jLabel para qeu se adapte a las medidas
        jLabel_Logo.setIcon(icono_logo);//en el label colocamos la imagen... y es con esta linea(setear la imagen al jlabel)
        this.repaint();
    }//Fin constructor

    //Se salio del constructor y estas lineas son para cambiar el icono de la interfaz del login (icono superior derecha de la interfaz) incluso en la barra de tareas tambien cambia
    //Sobre-escribimos el metodo de Image
    @Override
    public Image getIconImage() {//este es el metodo que se sobre-escribira, y con el getIcon se obtendra la imagen que se desea.
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
        //Image es: La clase
        //retValue es: Un objeto de la clase Image,  ese metodo GUARDA (toda esa linea de codigo) la imagen en una variable "retValue"
        //Toolkit es: kit de herramientas
        //el metodo getDefaultToolkit es: Un metodo que obtiene el kit de herramientas (por default)
        //.getImage es: es un metodo que obtendra la imagen
        //ClassLoader es: Tiene el metodo para pedir el recurso al sistema, osea la imagen seleccionada al sistema (el login)
        //.getSystemResource es: un Metodo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Logo = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        jButton_Acceder = new javax.swing.JButton();
        jLabel_Footer = new javax.swing.JLabel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel_Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 270, 270));

        txt_user.setBackground(new java.awt.Color(153, 153, 255));
        txt_user.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_user.setForeground(new java.awt.Color(0, 0, 0));
        txt_user.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_user.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 210, -1));

        txt_password.setBackground(new java.awt.Color(153, 153, 255));
        txt_password.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_password.setForeground(new java.awt.Color(0, 0, 0));
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 210, -1));

        jButton_Acceder.setBackground(new java.awt.Color(153, 153, 155));
        jButton_Acceder.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_Acceder.setForeground(new java.awt.Color(0, 0, 0));
        jButton_Acceder.setText("ACCEDER");
        jButton_Acceder.setBorder(null);
        jButton_Acceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AccederActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Acceder, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 211, 33));

        jLabel_Footer.setText("Creado por Oswaldo Parrilla ");
        getContentPane().add(jLabel_Footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, -1, -1));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AccederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AccederActionPerformed
        // BOTON ACCEDER
        user = txt_user.getText().trim();
        pass = txt_password.getText().trim();

        //VALIDACION DE NUESTROS CAMPOS DEL LOGIN
        //equals se utiliza para comparar dos objetos que apuntan a un mismo objeto
        if (!user.equals("") || !pass.equals("")) {//!equals si son diferentes a espacios en blanco entonces que...(es una comparacion a referencia de si no hay nada en los campos)

            //Conexion con la base de datos dependiendo del usuario que queramos ingresar(admon, capturista y tecnico, apuntaran a sus interfaces correspondientes)
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select tipo_nivel, status from usuarios where username = '" + user
                        + "' and password = '" + pass + "'");//Comparara que los datos DE USUARIO Y PASSWORD sean correctos con los que se tienen en la DB
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    String tipo_nivel = rs.getString("tipo_nivel");// la variable tipo_nivel contendra lo que haya encontrado en el campo "tipo_nivel" de la DB
                    String status = rs.getString("status");//

                    if (tipo_nivel.equalsIgnoreCase("Administrador") && status.equalsIgnoreCase("Activo")) {
                        dispose();//Este metodo "dispose" destruye/cierra la interfaz(jframe) (en este caso el login) y te permite abrir hacia donde le has indicado (en este caso Administrador)
                        new Administrador().setVisible(true);//aqui ya tendria que abrir la interfaz de administrador
                    } else if (tipo_nivel.equalsIgnoreCase("Capturista") && status.equalsIgnoreCase("Activo")) {
                        dispose();
                        new Capturista().setVisible(true);//aqui ya tendria que abrir la interfaz de capturista
                    } else if (tipo_nivel.equalsIgnoreCase("Tecnico") && status.equalsIgnoreCase("Activo")) {
                        dispose();
                        new Doctor().setVisible(true);//aqui ya tendria que abrir la interfaz de doctor
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Datos de acceso incorrectos");
                    txt_user.setText("");//Limpiar los campos una vez errar a ingresar los datos de la interfaz
                    txt_password.setText("");
                }

            } catch (SQLException e) {
                System.err.println("Error en el boton acceder" + e);
                JOptionPane.showMessageDialog(null, "Error al iniciar sesion, contacte al administrador.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
        }

    }//GEN-LAST:event_jButton_AccederActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Acceder;
    private javax.swing.JLabel jLabel_Footer;
    private javax.swing.JLabel jLabel_Logo;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables

}
