
package ventanas;
//Librerias
import clases.Conexion;
import java.sql.*;
//Librerias para fondo de imagenes
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;//Libreria para el icono
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;


/**
 *
 * @author xSpectra
 */
public class RegistrarUsuarios extends javax.swing.JFrame {
    
    String user;

    /**
     * Creates new form RegistrarUsuarios
     */
    
    //CONSTRUCTOR
    public RegistrarUsuarios() {
        initComponents();
        user = Login.user;//Recupera el nombre de usuario que quien ha iniciado sesion
        
        setTitle("Registrar nuevo usuario - Sesion de " + user);
        setSize(630, 350);
        setResizable(false);//no modifiquen la ventana
        setLocationRelativeTo(null);//se quede estatica la ventana de la interfaz 
        
         //metodo para Matar procesos de segundo plano, cuando sea cerrada la interfaz, el programa dejara de ejecutar en su totalidad
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        //Agregar imagen de fondo del login y se crea un objeto de la clase ImageIcon
        ImageIcon wallpaper = new ImageIcon("src/images/fondoGris.jpg");//Aqui le ponemos la ruta de las imagenes (el packete)
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_wallpaper.getWidth(), jLabel_wallpaper.getHeight(), Image.SCALE_DEFAULT));//Esta linea nos permite que la imagen se adapte a las dimenciones del Label
        jLabel_wallpaper.setIcon(icono);//Aqui ya le pasamos la imagen al Label (configurada con las anteriores lineas de codigo) respecto a sus dimenciones
        this.repaint();//Esta linea de codigo es para asegurar que la imagen se refleje en el Jlabel, asegurar que se este aplicando.
       
       
    }
    
     //Se salio del constructor y estas lineas son para cambiar el icono de la interfaz del login (icono superior derecha de la interfaz) incluso en la barra de tareas tambien cambia
    //Sobre-escribimos el metodo de Image
    @Override
    public Image getIconImage(){//este es el metodo que se sobre-escribira, y con el getIcon se obtendra la imagen que se desea.
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
        //Image es: La clase
        //retValue es: Un objeto de la clase Image,  ese metodo GUARDA (toda esa linea de codigo) la imagen en una variable "retValue"
        //Toolkit es: kit de herramientas
        //el metodo getDefaultToolkit es: Un metodo que obtiene el kit de herramientas (por default)
        //.getImage es: es un metodo que obtendra la imagen
        //ClassLoader es: Tiene el metodo para pedir el recurso al sistema, osea la imagen seleccionada al sistema (el login)
        //.getSystemResource es: un Metodo
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_mail = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        cmb_niveles = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel_footer = new javax.swing.JLabel();
        jLabel_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registro de usuarios");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        txt_nombre.setBackground(new java.awt.Color(153, 153, 255));
        txt_nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("em@il:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Telefono");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Permisos de:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Username:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Password:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, -1));

        txt_mail.setBackground(new java.awt.Color(153, 153, 255));
        txt_mail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_mail.setForeground(new java.awt.Color(255, 255, 255));
        txt_mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_mail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        txt_telefono.setBackground(new java.awt.Color(153, 153, 255));
        txt_telefono.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_telefono.setForeground(new java.awt.Color(255, 255, 255));
        txt_telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        txt_username.setBackground(new java.awt.Color(153, 153, 255));
        txt_username.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_username.setForeground(new java.awt.Color(255, 255, 255));
        txt_username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_username.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 210, -1));

        txt_password.setBackground(new java.awt.Color(153, 153, 255));
        txt_password.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_password.setForeground(new java.awt.Color(255, 255, 255));
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 210, -1));

        cmb_niveles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Capturista", "Doctor" }));
        cmb_niveles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_nivelesActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_niveles, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, 120, 100));

        jLabel_footer.setText("Creado por Oswaldo Parrilla Chavez");
        getContentPane().add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, -1, -1));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // CODIGO PARA EJECUTAR LAS FUNCIONALIDADES CUANDO SE APRIETA EL BOTON REGISTRAR (video 61 y 62)
        
        int permisos_cmb, validacion = 0; //validacion es una variable "bandera" 
        String nombre, mail, telefono, username, pass, permisos_string = ""; //variables para guardar los datos del usuario
        mail = txt_mail.getText().trim();//recuperamos lo que se escribio en los campos y se guarda en las variables
        username = txt_username.getText().trim();
        pass = txt_password.getText().trim();
        nombre = txt_nombre.getText().trim();
        telefono = txt_telefono.getText().trim();
        permisos_cmb = cmb_niveles.getSelectedIndex() + 1;//aqui recuperaremos lo que tenemos dentro del combobox, para ello necesitamos declarar una variable de tipo int 
                                                          //para guardar la opcion seleccionada
        //Validacion de campos vacios
        if(mail.equals("")){//que no haya quedado vacio el campo
            txt_mail.setBackground(Color.red);
            validacion ++;//Esta mas adelante la usaremos como una condicion para evitar que el programa se siga ejecutando
        }
        if(username.equals("")){//que no haya quedado vacio el campo
            txt_username.setBackground(Color.red);
            validacion ++;//Esta mas adelante la usaremos como una condicion para evitar que el programa se siga ejecutando
        }       
        if(pass.equals("")){//que no haya quedado vacio el campo
            txt_password.setBackground(Color.red);
            validacion ++;//Esta mas adelante la usaremos como una condicion para evitar que el programa se siga ejecutando
        }
        if(nombre.equals("")){//que no haya quedado vacio el campo
            txt_nombre.setBackground(Color.red);
            validacion ++;//Esta mas adelante la usaremos como una condicion para evitar que el programa se siga ejecutando
        }
        if(telefono.equals("")){//que no haya quedado vacio el campo
            txt_telefono.setBackground(Color.red);
            validacion ++;//Esta mas adelante la usaremos como una condicion para evitar que el programa se siga ejecutando
        }
        
        if(permisos_cmb == 1){//el if es para convertir las opciones del Cbox que tienen (1,2,3) de int a String
            permisos_string = "Administrador";
        }else if(permisos_cmb == 2){
            permisos_string = "Capturista";
        }else if (permisos_cmb == 3){
            permisos_string = "Doctor";
        }
        //VALIDAR QUE NO HAYA USERNAME IGUALES ANTES DE REGISTRAR UNO NUEVO, POR ESO HAREMOS UNA CONSULTA A NUESTRA DB
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                "select username from usuarios where username =  '" + username + "'  ");
            ResultSet rs = pst.executeQuery();   //Para ver si hay coincidencias en la DB  que estamos solicitando (ejecutando la instruccion que acabamos de ejecutar a la DB)
            
            if(rs.next()){//si encuentra coincidencias 
                txt_username.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "Nombre de usuario no disponible.");
                cn.close();//cerrar conexion con la base de datos AQUI TERMINO EL VIDEO NUMERO 61
            } else {//si no encuentras coincidencias, entonces.... EMPIEZA VIDEO NUMERO 62
                
                cn.close();//(Video 62, codigo para indicarle sl programa como se comporte en caso de que el Nombre usuario este completamente disponible[para un registro])   
            
                if (validacion == 0){//condicion de:  = 0 cuando no encuentra coincidencias en la DB
                   
                    try {  
                        Connection cn3 = Conexion.conectar(); //cn2, objeto con ese nombre porque tenemos ya un objeto con nombre cn y pst
                        PreparedStatement pst3 =  cn3.prepareStatement(
                        "insert into usuarios values (?,?,?,?,?,?,?,?,?)");// inserta dentro la tabla usuarios los valores.... los datos que se meteran en los campos de la interfaz
                        
                        pst3.setInt(1, 0);//el 1 es que mandaremos a la primer columna de nuestra DB, que en este caso es el ID de la tabla
                        pst3.setString(2, nombre);//y las variables de nombre, mail ... etc, se sacan de cuando creamos las variables en la parte de inicial del boton agregar, y estas se van directo a la DB
                        pst3.setString(3, telefono);
                        pst3.setString(4, mail);
                        pst3.setString(5, username);
                        pst3.setString(6, pass);
                        pst3.setString(7,permisos_string);
                        pst3.setString(8, "Activo");//cada que se registre un usuario siempre de inicio tiene que estar ACTIVO 
                        pst3.setString(9, user);//esta variable contiene el nombre de usuario quien esta haciendo el registro en ese momento al nuevo usuario
                                
                        pst3.executeUpdate();//ps3 falto por eso tenia tanto tiempo el error y arrojaba el ERROR  con el JOptionPane del catch
                        cn3.close();
                        
                        Limpiar();//metodo limpiar para, limpiar los campos de la interfaz(se crea despues , hasta el final del codigo)
                        
                        //iluminar campos de texto en verde cuando se haya registrado con exito los campos
                        txt_mail.setBackground(Color.green);
                        txt_nombre.setBackground(Color.green);
                        txt_password.setBackground(Color.green);
                        txt_telefono.setBackground(Color.green);
                        txt_username.setBackground(Color.green);
                        
                        JOptionPane.showMessageDialog(null, "Registro exitoso.");//mandar mensaje que el registro fue exitoso
                        this.dispose();//nos permite eliminar objetos y liberar recursos, osea que cierra la interfaz  al terminar el registro de un usuario nuevo
                        
                        cn3.close();
                        
                    }catch (SQLException e){
                        System.err.println("Error al registrar usuaro" + e);
                        JOptionPane.showMessageDialog(null, "ERROR!!! al registrar!!, contacte al administrador.");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
                }
            }
            
        }catch (SQLException e){
            System.err.println("Error en validar nombre de usuario." + e);
            JOptionPane.showMessageDialog(null, "Error al comparar usuario!!, contacte al administrador.");
        }
                                                          
                                                          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmb_nivelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_nivelesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_nivelesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_niveles;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
//cuando queremos crear metodos  por nosotros a una interfaz
    
    //crear metodo 
    public void Limpiar(){
        txt_mail.setText("");
        txt_nombre.setText("");
        txt_password.setText("");
        txt_telefono.setText("");
        txt_username.setText("");
        //restaruar la seleccion de nuestro combo-box 
        cmb_niveles.setSelectedIndex(0);
    }

}
