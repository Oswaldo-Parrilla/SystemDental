/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

//Librerias
import java.sql.*;
import clases.Conexion;
import java.awt.Color;
//Librerias para fondo de imagenes
import javax.swing.WindowConstants;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author xSpectra
 */
public class RestaurarPassword extends javax.swing.JFrame {
    //******71*********
    String user = "", user_update = "";
    
    //CONSTRUCTOR
    public RestaurarPassword() {
        initComponents();
        user = Login.user;
        user_update = GestionarUsuarios.user_update;
        setSize(360,260);//Establecer las dimenciones de la interfaz usuario
        setResizable(false);//Evita que el usuario mueva las dimensiones de la interfaz
        setTitle("Cambio de password para " + user);//El titulo en la parte superior de Jframe concatenado con el usuario que inicio sesion.
        setLocationRelativeTo(null);//Que se centre la ventana cuando se ejecute el programa
         //metodo para Matar procesos de segundo plano, cuando sea cerrada la interfaz, el seguira ejecutandose y evitara cerrar todo el programa
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);//Metodo que evita que se ejecute en segundo plano aunque la interfaz haya sido cerrada el programa sigue corriendo.
        
         //Agregar imagen de fondo del login y se crea un objeto de la clase ImageIcon
        ImageIcon wallpaper = new ImageIcon("src/images/fondoGris.jpg");//Aqui le ponemos la ruta de las imagenes (el packete)
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_wallpaper.getWidth(), jLabel_wallpaper.getHeight(), Image.SCALE_DEFAULT));//Esta linea nos permite que la imagen se adapte a las dimenciones del Label
        jLabel_wallpaper.setIcon(icono);//Aqui ya le pasamos la imagen al Label (configurada con las anteriores lineas de codigo) respecto a sus dimenciones
        this.repaint();//Esta linea de codigo es para asegurar que la imagen se refleje en el Jlabel, asegurar que se este aplicando.
    }
    
    //Se salio del constructor y estas lineas son para cambiar el icono de la interfaz del login (icono superior derecha de la interfaz) incluso en la barra de tareas tambien cambia
    //Sobre-escribimos el metodo de Image
    @Override
    public Image getIconImage(){//este es el metodo que se sobre-escribira, y con el getIcon se obtendra la imagen que se desea.
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
        //Image es: La clase
        //retValue es: Un objeto de la clase Image,  ese metodo GUARDA (toda esa linea de codigo) la imagen en una variable "retValue"
        //Toolkit es: kit de herramientas
        //el metodo getDefaultToolkit es: Un metodo que obtiene el kit de herramientas (por default)
        //.getImage es: es un metodo que obtendra la imagen
        //ClassLoader es: Tiene el metodo para pedir el recurso al sistema, osea la imagen seleccionada al sistema (el login)
        //.getSystemResource es: un Metodo
    }//*******71*********
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        txt_passwordConfirmacion = new javax.swing.JPasswordField();
        jButton_RestaurarPass = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cambio de Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nuevo Password:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Confirmar Password:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        txt_password.setBackground(new java.awt.Color(153, 153, 255));
        txt_password.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_password.setForeground(new java.awt.Color(255, 255, 255));
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        txt_passwordConfirmacion.setBackground(new java.awt.Color(153, 153, 255));
        txt_passwordConfirmacion.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_passwordConfirmacion.setForeground(new java.awt.Color(255, 255, 255));
        txt_passwordConfirmacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_passwordConfirmacion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_passwordConfirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        jButton_RestaurarPass.setBackground(new java.awt.Color(153, 153, 255));
        jButton_RestaurarPass.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_RestaurarPass.setForeground(new java.awt.Color(255, 255, 255));
        jButton_RestaurarPass.setText("Restaurar Password");
        jButton_RestaurarPass.setBorder(null);
        jButton_RestaurarPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RestaurarPassActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_RestaurarPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 210, 35));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_RestaurarPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RestaurarPassActionPerformed
        // CODIGO PARA DARLE EVENTO AL BOTON RESTAURAR PASSWORD
        //Declarando variables ****72*****
        String password, confirmacion_password;
        //Guardando en nuestras variables lo que contiene nuestros textsFields
        password = txt_password.getText().trim();
        confirmacion_password = txt_passwordConfirmacion.getText().trim();
        //Validacion de campos y confirmacion de contraseñas conincidan para su cambio a la DB
        if(!password.equals("") && !confirmacion_password.equals("")) {
            if(password.equals(confirmacion_password)){
                try{
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement(
                        "update usuarios set password =? where username = '"+ user_update +"' ");
                    pst.setString(1, password);
                    pst.executeUpdate();
                    cn.close();
                    txt_password.setBackground(Color.green);
                    txt_passwordConfirmacion.setBackground(Color.green);
                    JOptionPane.showMessageDialog(null, "Restauracion Existosa.");
                    this.dispose();
                    
                } catch(SQLException e) {
                    System.out.println("Error en restaurar password" + e);
                }
            } else {
                txt_passwordConfirmacion.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden.");
            }
        } else {
            txt_password.setBackground(Color.red);
            txt_passwordConfirmacion.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "No se admiten contraseñas vacias.");
        }//****72*****
        
    }//GEN-LAST:event_jButton_RestaurarPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurarPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurarPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurarPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurarPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurarPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_RestaurarPass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_passwordConfirmacion;
    // End of variables declaration//GEN-END:variables
}
